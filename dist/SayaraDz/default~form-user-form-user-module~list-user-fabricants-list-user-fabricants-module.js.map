{"version":3,"sources":["webpack:///./src/app/Services/Admins-CRUD/admins-crud.service.ts","webpack:///./src/app/Services/Authentification/authentification.service.ts","webpack:///./src/app/Services/Fabricant-CRUD/fabricant-crud.service.ts","webpack:///./src/app/Services/Users-CRUD/users-crud.service.ts"],"names":[],"mappings":"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","file":"default~form-user-form-user-module~list-user-fabricants-list-user-fabricants-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminsCrudService {\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  readonly ROOT_URL = environment.baseUrl;\r\n\r\n  public create(mfid:string,email:string,password:string,firstName?:string,lastName?:string,address?:string,phone?:string){\r\n\r\n    const headers = new HttpHeaders({'Authorization':localStorage.getItem('accesToken')});\r\n    \r\n    let body = {\r\n      email : email,\r\n      password : password,\r\n      firstName : firstName,\r\n      lastName : lastName,\r\n      phone : phone,\r\n      address : address\r\n    };\r\n\r\n    interface Response {\r\n      type: any;\r\n    }\r\n\r\n    return this.http.post<Response>(this.ROOT_URL+'/manufacturers/'+mfid+'/admins/',body, { headers: headers }\r\n    ).pipe(map(res => {\r\n      return res;\r\n    }));\r\n  }\r\n\r\n  public list(mfid:string){\r\n\r\n    interface Response {\r\n      manufacturer: any;\r\n    }\r\n\r\n    const header = new HttpHeaders({'Authorization':localStorage.getItem('accesToken')});\r\n\r\n    return this.http.get<Response>(this.ROOT_URL+'/manufacturers/'+mfid+'/admins/',{\r\n      headers: header\r\n    }).pipe(map(res => {\r\n      return res;\r\n    }));\r\n  }\r\n\r\n  public delete(mfid : string, id : number ){\r\n    const header = new HttpHeaders({'Authorization':localStorage.getItem('accesToken')});\r\n    \r\n    class ResponseError {\r\n      error: boolean;\r\n      msg : string;\r\n    }\r\n    \r\n    return this.http.delete(this.ROOT_URL+'/manufacturers/'+mfid+'/admins/'+id,{\r\n      headers: header}).pipe(map(res => {\r\n        if(res instanceof ResponseError){\r\n          const result = res as ResponseError;\r\n          if(result.error){\r\n            throw(result.msg);\r\n          }\r\n        }\r\n      return res;\r\n    }));\r\n  }\r\n\r\n  public update(mfid : string, id : number,body: any){\r\n    \r\n    const header = new HttpHeaders({'Authorization':localStorage.getItem('accesToken')});\r\n\r\n    interface Response {\r\n      type: any;\r\n    }\r\n\r\n    console.log(body);\r\n    \r\n\r\n    return this.http.put<Response>(this.ROOT_URL+'/manufacturers/'+mfid+'/admins/'+id,body, { headers: header }\r\n    ).pipe(map(res => {\r\n      return res;\r\n    }));\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Admin } from '../../model/admin.model';\r\nimport { FabricantAdmin } from '../../model/fabricant-admin';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthentificationService  {\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  readonly ROOT_URL = environment.baseUrl;\r\n\r\n  public loginAll(username:string,password:string){\r\n\r\n    interface LoginResponse {\r\n      token: string;\r\n      type : string;\r\n      manufacturer : string;\r\n      isAdmin : boolean;\r\n    }\r\n    let data = {\r\n      email : username,\r\n      password : password,\r\n    }\r\n\r\n    return this.http.post<LoginResponse>(this.ROOT_URL+'/login',\r\n    data\r\n    ).pipe(map(res => {\r\n      console.log(res);\r\n      return res;\r\n    }));\r\n  }\r\n\r\n  public login(username:string,password:string){\r\n\r\n    interface LoginResponse {\r\n      token: string;\r\n    }\r\n    let data = {\r\n      email : username,\r\n      password : password,\r\n    }\r\n\r\n    return this.http.post<LoginResponse>(this.ROOT_URL+'/admins/login',\r\n    data\r\n    ).pipe(map(res => {\r\n      console.log(res);\r\n      return res;\r\n    }));\r\n  }\r\n\r\n  public logout(){\r\n\r\n    const header = new HttpHeaders({'Authorization':localStorage.getItem('accesToken')});\r\n\r\n    this.http.delete(this.ROOT_URL+'/admins/logout',{\r\n      headers: header\r\n    }).subscribe(\r\n      res => {\r\n        console.log(res);\r\n        window.localStorage.setItem(\"accesToken\", \"\");\r\n        window.localStorage.setItem(\"isSuperAdmin\", \"\");\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  public userLogin(username:string,password:string){\r\n\r\n    interface LoginResponse {\r\n      email : string;\r\n      id : string;\r\n      token: string;\r\n      type : string;\r\n      manufacturer : string\r\n    }\r\n    let data = {\r\n      email : username,\r\n      password : password,\r\n    }\r\n\r\n    return this.http.post<LoginResponse>(this.ROOT_URL+'/manufacturers/login',\r\n    data\r\n    ).pipe(map(res => {\r\n      console.log(res);\r\n      return res;\r\n    }));\r\n  }\r\n\r\n  public userLogout(){\r\n\r\n    const header = new HttpHeaders({'Authorization':localStorage.getItem('accesToken')});\r\n\r\n    this.http.delete(this.ROOT_URL+'/manufacturers/logout',{\r\n      headers: header\r\n    }).subscribe(\r\n      res => {\r\n        console.log(res);\r\n        window.localStorage.setItem(\"accesToken\", \"\");\r\n        window.localStorage.setItem(\"isAdmin\", \"\");\r\n        window.localStorage.setItem(\"manufacturer\",\"\");\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  public showMe(){\r\n\r\n    const header = new HttpHeaders({'Authorization':localStorage.getItem('accesToken')});\r\n\r\n    return this.http.get<FabricantAdmin>(this.ROOT_URL+'/me',\r\n    { headers: header }\r\n    ).pipe(map(res => {\r\n      console.log(res);\r\n      return res;\r\n    }));\r\n  }\r\n\r\n\r\n  public updateMe(email:string, password:string){\r\n\r\n    const header = new HttpHeaders({'Authorization':localStorage.getItem('accesToken')});\r\n    let body = {email : email, password:password};\r\n    return this.http.put(this.ROOT_URL+'/admins/me',body,\r\n    { headers: header }\r\n    ).pipe(map(res => {\r\n      return res;\r\n    }));\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Fabricant} from '../../model/fabricant.model';\r\nimport { environment } from '../../../environments/environment';\r\n\r\ninterface Response {\r\n  manufacturers: Observable<Fabricant>[],\r\n  count : number\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class FabricantCRUDService {\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  readonly ROOT_URL = environment.baseUrl;\r\n\r\n  public create(marque:string,logo:File){\r\n\r\n    const headers = new HttpHeaders({'Authorization':localStorage.getItem('accesToken')});\r\n    let formData: FormData = new FormData();\r\n      formData.append('logo', logo);\r\n      formData.append('brand', marque);\r\n\r\n    return this.http.post<Fabricant>(this.ROOT_URL+'/manufacturers',formData, { headers: headers }\r\n    ).pipe(map(res => {\r\n      return res;\r\n    }));\r\n\r\n\r\n  }\r\n\r\n  public list(){\r\n\r\n    interface Response {\r\n      manufacturers: any;\r\n    }\r\n\r\n    const header = new HttpHeaders({'Authorization':localStorage.getItem('accesToken')});\r\n\r\n    return this.http.get<Response>(this.ROOT_URL+\"/manufacturers\",{\r\n      headers: header\r\n    }).pipe(map(res => {\r\n      return res;\r\n    }));\r\n  }\r\n\r\n  public listPage(page:number , perpage:number , sort:string= \"+\" ){\r\n\r\n    interface Response {\r\n      fabricants: any;\r\n      manufacturers: any;\r\n      count: any;\r\n    }\r\n\r\n    const header = new HttpHeaders({'Authorization':localStorage.getItem('accesToken')});\r\n\r\n    return this.http.get<Response>(this.ROOT_URL+\"/manufacturers\",{\r\n      headers: header,\r\n      params: new HttpParams()\r\n                .set('limit', perpage.toString())\r\n                .set('page', page.toString())\r\n                .set('sort', sort)\r\n    }).pipe(map(res => {\r\n      return res;\r\n    }));\r\n  }\r\n\r\n  public delete(id : number ){\r\n    const header = new HttpHeaders({'Authorization':localStorage.getItem('accesToken')});\r\n\r\n    class ResponseError {\r\n      error: boolean;\r\n      msg : string;\r\n    }\r\n\r\n    return this.http.delete(this.ROOT_URL+\"/manufacturers/\"+id,{\r\n      headers: header}).pipe(map(res => {\r\n        if(res instanceof ResponseError){\r\n          const result = res as ResponseError;\r\n          if(result.error){\r\n            throw(result.msg);\r\n          }\r\n        }\r\n      return res;\r\n    }));\r\n  }\r\n\r\n  public update(id : number , brand: string, logo : File){\r\n    const header = new HttpHeaders({'Authorization':localStorage.getItem('accesToken')});\r\n\r\n    class ResponseError {\r\n      error: boolean;\r\n      msg : string;\r\n    }\r\n\r\n    let formData: FormData = new FormData();\r\n      formData.append('logo', logo);\r\n      formData.append('brand', brand);\r\n\r\n\r\n    return this.http.put(this.ROOT_URL+\"/manufacturers/\"+id,formData,{\r\n      headers: header}).pipe(map(res => {\r\n        if(res instanceof ResponseError){\r\n          const result = res as ResponseError;\r\n          if(result.error){\r\n            throw(result.msg);\r\n          }\r\n        }\r\n      return res;\r\n    }));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsersCrudService {\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  readonly ROOT_URL = environment.baseUrl;\r\n\r\n  public create(mfid:string,email:string,password:string,firstName?:string,lastName?:string,address?:string,phone?:string){\r\n\r\n    const headers = new HttpHeaders({'Authorization':localStorage.getItem('accesToken')});\r\n\r\n    let body = {\r\n      email : email,\r\n      password : password,\r\n      firstName : firstName,\r\n      lastName : lastName,\r\n      address : address,\r\n      phone : phone\r\n    };\r\n\r\n    console.log(body);\r\n    return this.http.post(this.ROOT_URL+'/manufacturers/'+mfid+'/users/',body, { headers: headers }\r\n    ).pipe(map(res => {\r\n      return res;\r\n    }));\r\n  }\r\n\r\n  public list(mfid:string){\r\n\r\n    interface Response {\r\n      manufacturer: {\r\n        users : any;\r\n      };\r\n    }\r\n\r\n    const header = new HttpHeaders({'Authorization':localStorage.getItem('accesToken')});\r\n\r\n    return this.http.get<Response>(this.ROOT_URL+'/manufacturers/'+mfid+'/users/',{\r\n      headers: header\r\n    }).pipe(map(res => {\r\n      return res;\r\n    }));\r\n  }\r\n\r\n  public delete(mfid : string, id : number ){\r\n    const header = new HttpHeaders({'Authorization':localStorage.getItem('accesToken')});\r\n\r\n    class ResponseError {\r\n      error: boolean;\r\n      msg : string;\r\n    }\r\n\r\n    return this.http.delete(this.ROOT_URL+'/manufacturers/'+mfid+'/users/'+id,{\r\n      headers: header}).pipe(map(res => {\r\n        if(res instanceof ResponseError){\r\n          const result = res as ResponseError;\r\n          if(result.error){\r\n            throw(result.msg);\r\n          }\r\n        }\r\n      return res;\r\n    }));\r\n  }\r\n\r\n  public update(mfid : string, id : number,body: any){\r\n\r\n    const header = new HttpHeaders({'Authorization':localStorage.getItem('accesToken')});\r\n\r\n    interface Response {\r\n      type: any;\r\n    }\r\n\r\n    return this.http.put<Response>(this.ROOT_URL+'/manufacturers/'+mfid+'/users/'+id,body, { headers: header }\r\n    ).pipe(map(res => {\r\n      return res;\r\n    }));\r\n  }\r\n\r\n\r\n}\r\n"],"sourceRoot":""}