{"version":3,"sources":["webpack:///./src/app/Services/Authentification/authentification.service.ts","webpack:///./src/app/layout/profile/profile-routing.module.ts","webpack:///./src/app/layout/profile/profile.component.html","webpack:///./src/app/layout/profile/profile.component.scss","webpack:///./src/app/layout/profile/profile.component.ts","webpack:///./src/app/layout/profile/profile.module.ts"],"names":[],"mappings":"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","file":"profile-profile-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Admin } from '../../model/admin.model';\r\nimport { FabricantAdmin } from '../../model/fabricant-admin';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthentificationService  {\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  readonly ROOT_URL = environment.baseUrl;\r\n\r\n  public loginAll(username:string,password:string){\r\n\r\n    interface LoginResponse {\r\n      token: string;\r\n      type : string;\r\n      manufacturer : string;\r\n      isAdmin : boolean;\r\n    }\r\n    let data = {\r\n      email : username,\r\n      password : password,\r\n    }\r\n\r\n    return this.http.post<LoginResponse>(this.ROOT_URL+'/login',\r\n    data\r\n    ).pipe(map(res => {\r\n      console.log(res);\r\n      return res;\r\n    }));\r\n  }\r\n\r\n  public login(username:string,password:string){\r\n\r\n    interface LoginResponse {\r\n      token: string;\r\n    }\r\n    let data = {\r\n      email : username,\r\n      password : password,\r\n    }\r\n\r\n    return this.http.post<LoginResponse>(this.ROOT_URL+'/admins/login',\r\n    data\r\n    ).pipe(map(res => {\r\n      console.log(res);\r\n      return res;\r\n    }));\r\n  }\r\n\r\n  public logout(){\r\n\r\n    const header = new HttpHeaders({'Authorization':localStorage.getItem('accesToken')});\r\n\r\n    this.http.delete(this.ROOT_URL+'/admins/logout',{\r\n      headers: header\r\n    }).subscribe(\r\n      res => {\r\n        console.log(res);\r\n        window.localStorage.setItem(\"accesToken\", \"\");\r\n        window.localStorage.setItem(\"isSuperAdmin\", \"\");\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  public userLogin(username:string,password:string){\r\n\r\n    interface LoginResponse {\r\n      email : string;\r\n      id : string;\r\n      token: string;\r\n      type : string;\r\n      manufacturer : string\r\n    }\r\n    let data = {\r\n      email : username,\r\n      password : password,\r\n    }\r\n\r\n    return this.http.post<LoginResponse>(this.ROOT_URL+'/manufacturers/login',\r\n    data\r\n    ).pipe(map(res => {\r\n      console.log(res);\r\n      return res;\r\n    }));\r\n  }\r\n\r\n  public userLogout(){\r\n\r\n    const header = new HttpHeaders({'Authorization':localStorage.getItem('accesToken')});\r\n\r\n    this.http.delete(this.ROOT_URL+'/manufacturers/logout',{\r\n      headers: header\r\n    }).subscribe(\r\n      res => {\r\n        console.log(res);\r\n        window.localStorage.setItem(\"accesToken\", \"\");\r\n        window.localStorage.setItem(\"isAdmin\", \"\");\r\n        window.localStorage.setItem(\"manufacturer\",\"\");\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  public showMe(){\r\n\r\n    const header = new HttpHeaders({'Authorization':localStorage.getItem('accesToken')});\r\n\r\n    return this.http.get<FabricantAdmin>(this.ROOT_URL+'/me',\r\n    { headers: header }\r\n    ).pipe(map(res => {\r\n      console.log(res);\r\n      return res;\r\n    }));\r\n  }\r\n\r\n\r\n  public updateMe(email:string, password:string){\r\n\r\n    const header = new HttpHeaders({'Authorization':localStorage.getItem('accesToken')});\r\n    let body = {email : email, password:password};\r\n    return this.http.put(this.ROOT_URL+'/admins/me',body,\r\n    { headers: header }\r\n    ).pipe(map(res => {\r\n      return res;\r\n    }));\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProfileComponent } from './profile.component';\n\nconst routes: Routes = [\n    {\n        path: '', component: ProfileComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ProfileRoutingModule {\n}\n","module.exports = \"<div class=\\\"container pt-5\\\" >\\r\\n  <app-page-header [heading]=\\\"infoPage.title\\\" [icon]=\\\"infoPage.icon\\\"></app-page-header>\\r\\n  <div class=\\\"d-flex justify-content-center\\\">\\r\\n      <mat-spinner class=\\\"mt-5\\\"  [hidden]=\\\"!loading\\\"></mat-spinner>\\r\\n  </div>\\r\\n  <div class=\\\"\\\" [hidden]=\\\"loading\\\">\\r\\n    <app-notification [error] = \\\"error\\\"></app-notification>\\r\\n    <mat-card class=\\\"example-card mb-5\\\" >\\r\\n      <mat-card-header>\\r\\n        <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\r\\n        <mat-card-title>{{user.firstName}} {{user.lastName}}</mat-card-title>\\r\\n        <mat-card-subtitle>{{user.type}}</mat-card-subtitle>\\r\\n      </mat-card-header>\\r\\n      <mat-card-content>\\r\\n        <form [formGroup]=\\\"userFormGroup\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n          <div class=\\\"d-flex flex-column\\\">\\r\\n            <h5>Informations personnelles :</h5>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-6 d-flex flex-column\\\">\\r\\n                <mat-form-field>\\r\\n                  <input matInput placeholder=\\\"Nom\\\"  formControlName=\\\"username\\\" [value]=user.firstName/>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-6 d-flex flex-column\\\">\\r\\n                <mat-form-field>\\r\\n                  <input matInput placeholder=\\\"Prénom\\\" formControlName=\\\"usersurname\\\" [value]=user.lastName/>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-6 d-flex flex-column\\\">\\r\\n                <mat-form-field>\\r\\n                  <input matInput placeholder=\\\"Email\\\" type=\\\"email\\\" formControlName=\\\"email\\\" [value] = user.email />\\r\\n                  <mat-error *ngFor=\\\"let validation of account_validation_messages.email\\\">\\r\\n                  \\t<mat-error class=\\\"error-message\\\" *ngIf=\\\"userFormGroup.get('email').hasError(validation.type) && (userFormGroup.get('email').dirty || userFormGroup.get('email').touched)\\\">{{validation.message}}\\r\\n                  \\t</mat-error>\\r\\n                  </mat-error>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-6 d-flex flex-column\\\">\\r\\n                <mat-form-field>\\r\\n                  <input matInput placeholder=\\\"Phone\\\" formControlName=\\\"phone\\\" [value]=user.phone />\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <mat-form-field>\\r\\n              <input matInput placeholder=\\\"Address\\\" formControlName=\\\"address\\\" [value]=user.address />\\r\\n            </mat-form-field>\\r\\n            <br>\\r\\n            <h5>Choisir un mot de passe :</h5>\\r\\n            <div class=\\\"row\\\" [formGroup] = \\\"matching_passwords\\\">\\r\\n              <div class=\\\"col-sm-6 d-flex flex-column\\\">\\r\\n                <mat-form-field>\\r\\n                  <input matInput placeholder=\\\"Mot de passe\\\" type=\\\"password\\\" formControlName=\\\"password\\\"/>\\r\\n                  <mat-error *ngFor=\\\"let validation of account_validation_messages.password\\\">\\r\\n                  \\t<mat-error class=\\\"error-message\\\" *ngIf=\\\"matching_passwords.get('password').hasError(validation.type) && (matching_passwords.get('password').dirty || matching_passwords.get('password').touched)\\\">{{validation.message}}\\r\\n                  \\t</mat-error>\\r\\n                  </mat-error>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-6 d-flex flex-column\\\">\\r\\n                <mat-form-field>\\r\\n                  <input matInput placeholder=\\\"Confirmer le mot de passe\\\" type=\\\"password\\\" formControlName=\\\"confirmPassword\\\"/>\\r\\n                  <mat-error *ngFor=\\\"let validation of account_validation_messages.confirm_password\\\">\\r\\n                    <mat-error class=\\\"error-message\\\" *ngIf=\\\"matching_passwords.get('confirmPassword').hasError(validation.type) && (matching_passwords.get('confirmPassword').dirty || matching_passwords.get('confirmPassword').touched)\\\">{{validation.message}}</mat-error>\\r\\n                  </mat-error>\\r\\n                </mat-form-field>\\r\\n                <p class=\\\"error-message mat-error mat-form-field-subscript-wrapper mat-form-field\\\" *ngIf=\\\"matching_passwords.errors?.areEqual\\\">Password does not match</p>\\r\\n              </div>\\r\\n            </div>\\r\\n            <br>\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"d-flex flex-row-reverse\\\">\\r\\n            <button mat-flat-button color=\\\"primary\\\" class=\\\"btn-search\\\" type=\\\"submit\\\">Enregistrer<mat-icon>save</mat-icon></button>\\r\\n          </div>\\r\\n\\r\\n        </form>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".example-header-image {\\n  background-image: url(\\\"https://lenymotor.com/images/icon/admin.png\\\");\\n  background-size: cover; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L3Byb2ZpbGUvQzpcXFVzZXJzXFxuYWJvdVxcRG9jdW1lbnRzXFxBbmd1bGFyXFxwcm9qZXQyY3NcXFN5YXJhRHpXZWIvc3JjXFxhcHBcXGxheW91dFxccHJvZmlsZVxccHJvZmlsZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNFLG9FQUFvRTtFQUNwRSxzQkFBc0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9wcm9maWxlL3Byb2ZpbGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLmV4YW1wbGUtaGVhZGVyLWltYWdlIHtcclxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHBzOi8vbGVueW1vdG9yLmNvbS9pbWFnZXMvaWNvbi9hZG1pbi5wbmcnKTtcclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators, FormControl} from '@angular/forms';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA , MatDialogConfig} from '@angular/material';\nimport { first } from 'rxjs/operators';\nimport { PasswordValidator } from '../../validators/password.validator';\nimport { FabricantAdmin } from '../../model/fabricant-admin';\nimport { AuthentificationService } from './../../Services/Authentification/authentification.service';\nimport {DeleteConfirmDialogComponent} from './../../shared/delete-confirm-dialog/delete-confirm-dialog.component';\n\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n  infoPage = {\n    title : \"Profile\",\n    icon : \"fa-user\",\n  };\n\n  error : string = \"\";\n\n  user :FabricantAdmin = new FabricantAdmin(\"12d8azD885DZq8dzar\",\n  \"fs_bouhenniche@esi.dz\",\n  \"USER FABRICANT\",\n  \"kia\",\n  \"Bouhenniche\",\"Sihem\",\n  false,\n  \"0551234567\",\"hai elbadre,kouba, alger\");\n  loading : boolean = false;\n\n\n  userFormGroup: FormGroup;\n  matching_passwords : FormGroup;\n\n  account_validation_messages = {\n    'email': [\n        { type: 'required', message: 'Email is required' },\n        { type: 'pattern', message: 'Enter a valid email' }\n      ],\n      'confirm_password': [\n        { type: 'required', message: 'Confirm password is required' },\n        { type: 'areEqual', message: 'Password mismatch' }\n      ],\n      'password': [\n        { type: 'required', message: 'Password is required' },\n      ]\n    };\n  constructor(private _formBuilder: FormBuilder,public dialog: MatDialog,private auth:AuthentificationService) { }\n\n  ngOnInit() {\n    //get user infos\n    this.loading = true;\n    this.auth.showMe()\n    .pipe(first()).subscribe(\n        res => {\n          if (res == undefined) {\n            console.log(\"Show Error feedback!\");\n          } else {\n            this.user = res;\n          }\n          this.loading = false;\n        },\n        err => {\n          this.loading = false;\n          this.error = err;\n          console.log(\"Error occured : \"+ err);\n        }\n      );\n    //init form\n    this.userFormGroup = this._formBuilder.group({\n      username: ['', Validators.compose([\n    \t\tValidators.maxLength(25),\n    \t\tValidators.minLength(5),\n    \t\tValidators.pattern('^(?=.*[a-zA-Z])[a-zA-Z]+$'),\n    \t\tValidators.required\n    \t])],\n      usersurname: ['', Validators.compose([\n    \t\tValidators.maxLength(25),\n    \t\tValidators.minLength(5),\n    \t\tValidators.pattern('^(?=.*[a-zA-Z])[a-zA-Z]+$'),\n    \t\tValidators.required\n    \t])],\n      email: ['', Validators.compose([\n           Validators.required,\n           Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])],\n      address: ['', Validators.compose([\n    \t\tValidators.maxLength(25),\n    \t\tValidators.minLength(5),\n    \t\tValidators.required\n    \t])],\n      phone: ['', Validators.required],\n      fabricant: ['', Validators.required],\n    });\n\n    this.matching_passwords = this._formBuilder.group({\n      password: ['', Validators.required],\n      confirmPassword: ['', Validators.required],\n    },\n   {\n      // check whether our password and confirm password match\n      validator: PasswordValidator.validate.bind(this)\n   });\n  }\n  onSubmit(){\n    const email = this.userFormGroup.controls['email'].value;\n    const password = this.matching_passwords.controls['password'].value;\n    //...... update inofrmations\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    const dialogRef = this.dialog.open(DeleteConfirmDialogComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe(result => {\n      if(result){\n        console.log(\"confirmation : true; update\")\n      }\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProfileComponent } from './profile.component';\nimport { MaterialModule } from './../material.module';\nimport { ProfileRoutingModule } from './profile-routing.module';\nimport { PageHeaderModule } from './../shared';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { NotificationModule,DeleteConfirmDialogModule } from '../../shared';\nimport {DeleteConfirmDialogComponent} from './../../shared/delete-confirm-dialog/delete-confirm-dialog.component';\n@NgModule({\n  declarations: [ProfileComponent],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    ProfileRoutingModule,\n    PageHeaderModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NotificationModule,\n    DeleteConfirmDialogModule,\n  ],\n  entryComponents: [DeleteConfirmDialogComponent],\n})\nexport class ProfileModule { }\n"],"sourceRoot":""}