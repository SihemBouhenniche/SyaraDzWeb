{"version":3,"sources":["webpack:///./src/app/Services/Admins-CRUD/admins-crud.service.ts","webpack:///./src/app/Services/Fabricant-CRUD/fabricant-crud.service.ts","webpack:///./src/app/layout/form-fabricant/form-fabricant-routing.module.ts","webpack:///./src/app/layout/form-fabricant/form-fabricant.component.html","webpack:///./src/app/layout/form-fabricant/form-fabricant.component.scss","webpack:///./src/app/layout/form-fabricant/form-fabricant.component.ts","webpack:///./src/app/layout/form-fabricant/form-fabricant.module.ts","webpack:///./src/app/model/fabricant.model.ts"],"names":[],"mappings":"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","file":"form-fabricant-form-fabricant-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminsCrudService {\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  readonly ROOT_URL = environment.baseUrl;\r\n\r\n  public create(mfid:string,email:string,password:string,firstName?:string,lastName?:string,address?:string,phone?:string){\r\n\r\n    const headers = new HttpHeaders({'Authorization':localStorage.getItem('accesToken')});\r\n    \r\n    let body = {\r\n      email : email,\r\n      password : password,\r\n      firstName : firstName,\r\n      lastName : lastName,\r\n      phone : phone,\r\n      address : address\r\n    };\r\n\r\n    interface Response {\r\n      type: any;\r\n    }\r\n\r\n    return this.http.post<Response>(this.ROOT_URL+'/manufacturers/'+mfid+'/admins/',body, { headers: headers }\r\n    ).pipe(map(res => {\r\n      return res;\r\n    }));\r\n  }\r\n\r\n  public list(mfid:string){\r\n\r\n    interface Response {\r\n      manufacturer: any;\r\n    }\r\n\r\n    const header = new HttpHeaders({'Authorization':localStorage.getItem('accesToken')});\r\n\r\n    return this.http.get<Response>(this.ROOT_URL+'/manufacturers/'+mfid+'/admins/',{\r\n      headers: header\r\n    }).pipe(map(res => {\r\n      return res;\r\n    }));\r\n  }\r\n\r\n  public delete(mfid : string, id : number ){\r\n    const header = new HttpHeaders({'Authorization':localStorage.getItem('accesToken')});\r\n    \r\n    class ResponseError {\r\n      error: boolean;\r\n      msg : string;\r\n    }\r\n    \r\n    return this.http.delete(this.ROOT_URL+'/manufacturers/'+mfid+'/admins/'+id,{\r\n      headers: header}).pipe(map(res => {\r\n        if(res instanceof ResponseError){\r\n          const result = res as ResponseError;\r\n          if(result.error){\r\n            throw(result.msg);\r\n          }\r\n        }\r\n      return res;\r\n    }));\r\n  }\r\n\r\n  public update(mfid : string, id : number,body: any){\r\n    \r\n    const header = new HttpHeaders({'Authorization':localStorage.getItem('accesToken')});\r\n\r\n    interface Response {\r\n      type: any;\r\n    }\r\n\r\n    console.log(body);\r\n    \r\n\r\n    return this.http.put<Response>(this.ROOT_URL+'/manufacturers/'+mfid+'/admins/'+id,body, { headers: header }\r\n    ).pipe(map(res => {\r\n      return res;\r\n    }));\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Fabricant} from '../../model/fabricant.model';\r\nimport { environment } from '../../../environments/environment';\r\n\r\ninterface Response {\r\n  manufacturers: Observable<Fabricant>[],\r\n  count : number\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class FabricantCRUDService {\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  readonly ROOT_URL = environment.baseUrl;\r\n\r\n  public create(marque:string,logo:File){\r\n\r\n    const headers = new HttpHeaders({'Authorization':localStorage.getItem('accesToken')});\r\n    let formData: FormData = new FormData();\r\n      formData.append('logo', logo);\r\n      formData.append('brand', marque);\r\n\r\n    return this.http.post<Fabricant>(this.ROOT_URL+'/manufacturers',formData, { headers: headers }\r\n    ).pipe(map(res => {\r\n      return res;\r\n    }));\r\n\r\n\r\n  }\r\n\r\n  public list(){\r\n\r\n    interface Response {\r\n      manufacturers: any;\r\n    }\r\n\r\n    const header = new HttpHeaders({'Authorization':localStorage.getItem('accesToken')});\r\n\r\n    return this.http.get<Response>(this.ROOT_URL+\"/manufacturers\",{\r\n      headers: header\r\n    }).pipe(map(res => {\r\n      return res;\r\n    }));\r\n  }\r\n\r\n  public listPage(page:number , perpage:number , sort:string= \"+\" ){\r\n\r\n    interface Response {\r\n      fabricants: any;\r\n      manufacturers: any;\r\n      count: any;\r\n    }\r\n\r\n    const header = new HttpHeaders({'Authorization':localStorage.getItem('accesToken')});\r\n\r\n    return this.http.get<Response>(this.ROOT_URL+\"/manufacturers\",{\r\n      headers: header,\r\n      params: new HttpParams()\r\n                .set('limit', perpage.toString())\r\n                .set('page', page.toString())\r\n                .set('sort', sort)\r\n    }).pipe(map(res => {\r\n      return res;\r\n    }));\r\n  }\r\n\r\n  public delete(id : number ){\r\n    const header = new HttpHeaders({'Authorization':localStorage.getItem('accesToken')});\r\n\r\n    class ResponseError {\r\n      error: boolean;\r\n      msg : string;\r\n    }\r\n\r\n    return this.http.delete(this.ROOT_URL+\"/manufacturers/\"+id,{\r\n      headers: header}).pipe(map(res => {\r\n        if(res instanceof ResponseError){\r\n          const result = res as ResponseError;\r\n          if(result.error){\r\n            throw(result.msg);\r\n          }\r\n        }\r\n      return res;\r\n    }));\r\n  }\r\n\r\n  public update(id : number , brand: string, logo : File){\r\n    const header = new HttpHeaders({'Authorization':localStorage.getItem('accesToken')});\r\n\r\n    class ResponseError {\r\n      error: boolean;\r\n      msg : string;\r\n    }\r\n\r\n    let formData: FormData = new FormData();\r\n      formData.append('logo', logo);\r\n      formData.append('brand', brand);\r\n\r\n\r\n    return this.http.put(this.ROOT_URL+\"/manufacturers/\"+id,formData,{\r\n      headers: header}).pipe(map(res => {\r\n        if(res instanceof ResponseError){\r\n          const result = res as ResponseError;\r\n          if(result.error){\r\n            throw(result.msg);\r\n          }\r\n        }\r\n      return res;\r\n    }));\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormFabricantComponent } from './form-fabricant.component';\n\nconst routes: Routes = [\n    {\n        path: '', component: FormFabricantComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class FormFabricantRoutingModule {\n}\n","module.exports = \"<div class=\\\"container pt-5\\\">\\n    <app-page-header [heading]=\\\"'Créer Fabricant'\\\" [icon]=\\\"'fa-plus'\\\"></app-page-header>\\n    <div class=\\\"d-flex justify-content-center\\\">\\n        <mat-spinner class=\\\"mt-5\\\"  [hidden]=\\\"!loading\\\"></mat-spinner>\\n    </div>\\n    <div class=\\\"row\\\" [hidden]=\\\"loading\\\">\\n        <div class=\\\"col-lg-12\\\">\\n          <app-notification class=\\\"ma-2\\\" [error] = \\\"error\\\"></app-notification>\\n          <mat-horizontal-stepper linear=\\\"false\\\" #stepper>\\n              <mat-step [stepControl]=\\\"firstFormGroup\\\">\\n                  <ng-template matStepLabel>fabricant</ng-template>\\n                  <form [formGroup]=\\\"firstFormGroup\\\">\\n                    <div class=\\\"d-flex flex-column\\\">\\n                      <h5>Informations générales :</h5>\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-6 d-flex flex-column\\\">\\n                          <mat-form-field>\\n                            <input formControlName=\\\"fabricant\\\" matInput placeholder=\\\"Nom de fabricant\\\" />\\n                          </mat-form-field>\\n                        </div>\\n                        <div class=\\\"col-sm-6 d-flex flex-column\\\">\\n                          <mat-form-field>\\n                            <input formControlName=\\\"addressFabricant\\\" matInput placeholder=\\\"Adresse de fabricant\\\" />\\n                          </mat-form-field>\\n                        </div>\\n                      </div>\\n\\n                      <br>\\n                      <h5>Choisir un logo de la marque :</h5>\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-6\\\">\\n                          <fieldset class=\\\"form-group\\\">\\n                              <input\\n                                #file\\n                                type=\\\"file\\\"\\n                                formControlName=\\\"logoFabricant\\\"\\n                                class=\\\"form-control\\\"\\n                                accept=\\\"image/jpeg,image/png\\\"\\n                                (change)=\\\"onFileChange($event)\\\"\\n                                required\\n                                style=\\\"display : none\\\">\\n                          </fieldset>\\n                          <button mat-raised-button color=\\\"primary\\\" (click) = \\\"addFiles()\\\">Choisir un logo du fabricant</button>\\n                        </div>\\n                        <div class=\\\"col-sm-6 d-flex flex-column\\\">\\n                          <fieldset class=\\\"form-group\\\">\\n                              <img [src]=logo alt=\\\"Aucun logo choisie\\\" height=\\\"200px\\\" width=\\\"200px\\\">\\n                          </fieldset>\\n                        </div>\\n                      </div>\\n                    </div>\\n                    <br>\\n                    <button mat-raised-button color=\\\"primary\\\" matStepperNext>Suivant</button>\\n                  </form>\\n              </mat-step>\\n              <mat-step [stepControl]=\\\"secondFormGroup\\\">\\n                  <ng-template matStepLabel>Utilisateur(optionel)</ng-template>\\n                  <form [formGroup]=\\\"secondFormGroup\\\">\\n                    <div class=\\\"d-flex flex-column\\\">\\n                      <h5>Informations personnelles :</h5>\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-6 d-flex flex-column\\\">\\n                          <mat-form-field>\\n                            <input matInput placeholder=\\\"Nom\\\"  formControlName=\\\"username\\\"/>\\n                          </mat-form-field>\\n                        </div>\\n                        <div class=\\\"col-sm-6 d-flex flex-column\\\">\\n                          <mat-form-field>\\n                            <input matInput placeholder=\\\"Prénom\\\" formControlName=\\\"usersurname\\\" />\\n                          </mat-form-field>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-6 d-flex flex-column\\\">\\n                          <mat-form-field>\\n                            <input matInput placeholder=\\\"Email\\\" type=\\\"email\\\" formControlName=\\\"email\\\" />\\n                          </mat-form-field>\\n                        </div>\\n                        <div class=\\\"col-sm-6 d-flex flex-column\\\">\\n                          <mat-form-field>\\n                            <input matInput placeholder=\\\"Phone\\\" formControlName=\\\"phone\\\" />\\n                          </mat-form-field>\\n                        </div>\\n                      </div>\\n\\n                      <mat-form-field>\\n                        <input matInput placeholder=\\\"Address\\\" formControlName=\\\"address\\\"/>\\n                      </mat-form-field>\\n                      <br>\\n                      <h5>Choisir un mot de passe :</h5>\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-6 d-flex flex-column\\\">\\n                          <mat-form-field>\\n                            <input matInput placeholder=\\\"Mot de passe\\\" type=\\\"password\\\" formControlName=\\\"password\\\"/>\\n                          </mat-form-field>\\n                        </div>\\n                        <div class=\\\"col-sm-6 d-flex flex-column\\\">\\n                          <mat-form-field>\\n                            <input matInput placeholder=\\\"Confirmer le mot de passe\\\" type=\\\"password\\\" formControlName=\\\"confirmPassword\\\"/>\\n                          </mat-form-field>\\n                        </div>\\n                      </div>\\n                      <br>\\n                      <h5>Informations générales :</h5>\\n                      <mat-form-field>\\n                        <input matInput type=\\\"text\\\" [value]=\\\"getFabricantName()\\\"  placeholder=\\\"Fabricant\\\" formControlName=\\\"fabricant\\\" required/>\\n                      </mat-form-field>\\n                    </div>\\n                    <br>\\n                    <button class=\\\"mx-2\\\" mat-raised-button color=\\\"warn\\\" matStepperPrevious>Retour</button>\\n                    <button class=\\\"mx-2\\\" mat-raised-button color=\\\"primary\\\" matStepperNext>Suivant</button>\\n                  </form>\\n              </mat-step>\\n              <mat-step>\\n                  <ng-template matStepLabel>Valider</ng-template>\\n                  <h3>Valider la création</h3>\\n                  <button class=\\\"mx-2\\\" mat-raised-button color=\\\"warn\\\" matStepperPrevious>Retour</button>\\n                  <button class=\\\"mx-2\\\" mat-raised-button color=\\\"primary\\\" matStepperNext mat-button (click)=\\\"onSubmit()\\\">Valider la création</button>\\n              </mat-step>\\n          </mat-horizontal-stepper>\\n        </div>\\n    </div>\\n    <!-- /.row -->\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9mb3JtLWZhYnJpY2FudC9mb3JtLWZhYnJpY2FudC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component,ElementRef ,OnInit ,ViewChild} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms'\r\nimport { Router } from '@angular/router';\r\nimport { FabricantCRUDService } from '../../Services/Fabricant-CRUD/fabricant-crud.service'\r\nimport { AdminsCrudService } from '../../Services/Admins-CRUD/admins-crud.service'\r\n\r\nimport { Fabricant} from '../../model/fabricant.model';\r\nimport { first } from 'rxjs/operators';\r\n\r\n\r\n@Component({\r\n    selector: 'app-form-fabricant',\r\n    templateUrl: './form-fabricant.component.html',\r\n    styleUrls: ['./form-fabricant.component.scss'],\r\n})\r\nexport class FormFabricantComponent implements OnInit {\r\n\r\n\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n  submitted = false;\r\n  logo : string = '';\r\n  error : string = \"\";\r\n  logoImage : File = null;\r\n  loading : boolean = false;\r\n  @ViewChild('file') file : ElementRef;\r\n\r\n  constructor(private _formBuilder: FormBuilder,\r\n              private fabricant:FabricantCRUDService,\r\n              private admins : AdminsCrudService,\r\n              private router:Router) {}\r\n\r\n  ngOnInit() {\r\n    this.firstFormGroup = this._formBuilder.group({\r\n      fabricant: ['', Validators.required],\r\n      addressFabricant: ['', Validators.required],\r\n      logoFabricant: ['', Validators.required]\r\n    });\r\n    this.secondFormGroup = this._formBuilder.group({\r\n      username: ['', Validators.required],\r\n      usersurname: ['', Validators.required],\r\n      email: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n      confirmPassword: ['', Validators.required],\r\n      address: ['', Validators.required],\r\n      phone: ['', Validators.required],\r\n      fabricant: [{value: '', disabled: true}, Validators.required],\r\n    });\r\n  }\r\n\r\n  addFiles() {\r\n      this.file.nativeElement.click();\r\n  }\r\n  getFabricantName(){\r\n      return this.firstFormGroup.controls['fabricant'].value;\r\n  }\r\n  onFileChange($event){\r\n    this.logoImage = (<HTMLInputElement>event.target).files.item(0);\r\n    if ((<HTMLInputElement>event.target).files && (<HTMLInputElement>event.target).files[0]) {\r\n      var reader = new FileReader();\r\n\r\n      reader.onload = (event: ProgressEvent) => {\r\n        this.logo = (<FileReader>event.target).result as string;\r\n      }\r\n\r\n      reader.readAsDataURL((<HTMLInputElement>event.target).files[0]);\r\n    }\r\n  }\r\n  onSubmit() {\r\n      this.submitted = true;\r\n\r\n      // stop here if form is invalid\r\n      if (this.firstFormGroup.invalid) {\r\n          this.error = \"Unvalid input\";\r\n          console.log(\"Unvalid input\");\r\n          return;\r\n      }\r\n      /*if (this.secondFormGroup.invalid) {\r\n        this.error = \"Unvalid input\";\r\n        console.log(\"Unvalid input\");\r\n        return;\r\n      }*/\r\n      this.createFabricant();\r\n\r\n  }\r\n  createFabricant(){\r\n    let brand = this.firstFormGroup.controls['fabricant'].value;\r\n    this.loading = true;\r\n    this.fabricant.create(brand,this.logoImage)\r\n    .pipe(first()).subscribe(\r\n        res => {\r\n            if(res instanceof Fabricant){\r\n              this.loading = false;\r\n              console.log(res);\r\n              this.router.navigate([\"/dashboard/afficherFabricants\"]);\r\n            }else{\r\n              this.error = res;\r\n              this.loading = false;\r\n              console.log(\"Error occured : \"+ res);\r\n            }\r\n\r\n        },\r\n        err => {\r\n            this.error = err;\r\n            this.loading = false;\r\n            console.log(\"Error occured : \"+ err);\r\n        }\r\n    );\r\n  }\r\n  createAdminFabricant(manufacturer:string){\r\n    const admin = {\r\n        email : this.secondFormGroup.controls['email'].value,\r\n        password : this.secondFormGroup.controls['password'].value ,\r\n        firstName : this.secondFormGroup.controls['username'].value,\r\n        lastName : this.secondFormGroup.controls['usersurname'].value,\r\n        address : this.secondFormGroup.controls['address'].value,\r\n        phone : this.secondFormGroup.controls['phone'].value,\r\n    };\r\n      console.log(manufacturer);\r\n      this.loading = true;\r\n      //create the admin of the manufacturer\r\n      this.admins.create(manufacturer,\r\n                      admin.email,\r\n                      admin.password,\r\n                      admin.lastName,\r\n                      admin.firstName,\r\n                      admin.address,\r\n                      admin.phone)\r\n    .pipe(first()).subscribe(\r\n      res => {\r\n        console.log(res);\r\n      },\r\n      err => {\r\n        console.log(\"Error occured : /n\"+ err);\r\n      }\r\n  );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {MatStepperModule} from '@angular/material/stepper';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MaterialModule} from './../material.module';\nimport { FormFabricantRoutingModule } from './form-fabricant-routing.module';\nimport { FormFabricantComponent } from './form-fabricant.component';\nimport { PageHeaderModule } from './../shared';\nimport { NotificationModule } from './../../shared';\n@NgModule({\n    imports: [\n      CommonModule,\n      FormFabricantRoutingModule,\n      PageHeaderModule,MatStepperModule,\n      FormsModule,\n      ReactiveFormsModule,\n      MaterialModule,\n      NotificationModule],\n    declarations: [FormFabricantComponent]\n})\nexport class FormFabricantModule {}\n","export class Fabricant {\n  constructor(\n    public brand: string,\n    public reatedAt: Date,\n    public id: string,\n    public logo: string,\n    public updatedAt: Date\n  ){}\n}\n"],"sourceRoot":""}